definitions:
  origin.CreateOrigin:
    properties:
      origin:
        type: string
    type: object
  origin.GetOrigin:
    properties:
      id:
        type: string
      origin:
        type: string
    type: object
  user.CreateUser:
    properties:
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      password:
        type: string
    type: object
  user.Login:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  user.VerifyCode:
    properties:
      code:
        type: integer
      email:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server for a restaurant reservation system.
  title: Artisan Connect
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login a user with email and password
      parameters:
      - description: User credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/user.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Login a user
      tags:
      - user
  /origins:
    get:
      description: Retrieve a list of all origin entities
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/origin.GetOrigin'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all origins
      tags:
      - origin
    post:
      consumes:
      - application/json
      description: Create a new origin entity
      parameters:
      - description: Origin request body
        in: body
        name: origin
        required: true
        schema:
          $ref: '#/definitions/origin.CreateOrigin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a new origin
      tags:
      - origin
  /origins/{id}:
    delete:
      description: Delete an origin entity by its ID
      parameters:
      - description: Origin ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete an origin
      tags:
      - origin
    get:
      description: Retrieve a specific origin entity by its ID
      parameters:
      - description: Origin ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/origin.GetOrigin'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get origin by ID
      tags:
      - origin
    put:
      consumes:
      - application/json
      description: Update the details of an existing origin
      parameters:
      - description: Origin ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated origin data
        in: body
        name: origin
        required: true
        schema:
          $ref: '#/definitions/origin.CreateOrigin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update an existing origin
      tags:
      - origin
  /register:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User request body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a new user
      tags:
      - user
  /verify:
    post:
      consumes:
      - application/json
      description: Verify the code sent to the user's email
      parameters:
      - description: Verification code and email
        in: body
        name: code
        required: true
        schema:
          $ref: '#/definitions/user.VerifyCode'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Verify the user code
      tags:
      - user
securityDefinitions:
  Bearer:
    description: Enter the token in the format `Bearer {token}`
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
